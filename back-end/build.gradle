buildscript {
    ext {
        springBootVersion = '2.2.5.RELEASE'
        lombokVersion = '1.18.4'
        swaggerVersion = '2.9.2'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" } /* QueryDSL 주석 프로세서 사용 */
        maven { url "http://maven.icm.edu.pl/artifactory/repo/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
        classpath('net.ltgt.gradle:gradle-apt-plugin:0.18') /* QueryDSL 주석 프로세서 사용 */
    }
}

ext {
    projectGroup = 'kr.co.queenssmile'
}

allprojects {

    repositories {
        jcenter()
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'net.ltgt.apt' /* QueryDSL 주석 프로세서 사용 */
    apply plugin: 'net.ltgt.apt-idea' /* QueryDSL 주석 프로세서 사용 */

    group = "${projectGroup}"
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'
    def queryDslVersion = '4.2.1'

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
    }

    test {
        useJUnitPlatform()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation "org.springframework.boot:spring-boot-maven-plugin:${springBootVersion}"
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'// https://mvnrepository.com/artifact/org.springframework.plugin/spring-plugin-core

        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.2.0.RELEASE'
        implementation 'org.springframework.security:spring-security-jwt:1.0.11.RELEASE'
        implementation 'io.jsonwebtoken:jjwt:0.9.0' // jwt generato

        implementation 'org.springframework.mobile:spring-mobile-device:1.1.5.RELEASE'

        //exel
        implementation 'org.apache.poi:poi:4.1.0'
        implementation 'org.apache.poi:poi-ooxml:4.1.0'

        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        // QueryDSL
        implementation "com.querydsl:querydsl-core:${queryDslVersion}"
        implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
        annotationProcessor ( /* QueryDSL 주석 프로세서 사용 and (빌드, 실행, 배포 → 컴파일러 → 어노테이션 프로세서)에서 IntelliJ 설정 */
                "com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
                "javax.persistence:javax.persistence-api:2.2",
                "javax.annotation:javax.annotation-api:1.3.2",
        )

        implementation 'org.apache.commons:commons-text:1.8'
    }
}

project(':api') {
    dependencies {
        implementation project(':core')
    }
}

project(':admin') {
    dependencies {
        implementation project(':core')
    }
}